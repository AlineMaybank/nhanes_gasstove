#a_03_imputation
#I used m=1 (single imputation instead of m=5 and then pooling the results)

### ------------------------------------------------------------------------
# a_03_imputation.R - MICE-based multiple imputation (for adults 18+ w/ asthma)
### ------------------------------------------------------------------------

# Load packages
library(dplyr)
library(mice)
library(tidyr)

### -------------------------------------------
# Step 1: Define Variables for Imputation
### -------------------------------------------
vars_to_impute_adults <- c(
  "VTQ241A",   # Gas stove use
  "MCQ050",    # ER visit
  "RIDAGEYR",  # Age
  "RIAGENDR",  # Sex
  "RIDRETH3",  # Race/ethnicity
  "INDFMPIR",  # Income
  "HOQ065"     # Housing
)

id_vars <- c("SEQN", "SDMVPSU", "SDMVSTRA", "WTMEC2YR", "WTSVOC2Y", "YEAR")
vars_to_keep_but_not_impute <- c("MCQ040", "SMQ040", "SMQ876", "BMXBMI")

### -------------------------------------------
# Step 2: Filter to Adults (18+) WITH Asthma Diagnosis
### -------------------------------------------
subset_adults_for_impute <- merged_nhanes_all %>%
  filter(RIDAGEYR >= 18, MCQ035 == 1) %>%
  select(all_of(c(id_vars, vars_to_impute_adults, vars_to_keep_but_not_impute)))


#Check-point:
#Diagnose Missingness and Non-Binary Values
# Count missing values per variable
missing_summary <- subset_adults_for_impute %>%
  summarise(across(everything(), ~sum(is.na(.)), .names = "missing_{.col}"))

# For binary yes/no variables, check for values other than 1 or 2
# Assuming VTQ241A and MCQ050 are yes/no variables (check others if needed)
non_binary_summary <- subset_adults_for_impute %>%
  summarise(
    VTQ241A_non_binary = sum(!(VTQ241A %in% c(1, 2)) & !is.na(VTQ241A)),
    MCQ050_non_binary = sum(!(MCQ050 %in% c(1, 2)) & !is.na(MCQ050))
  )

# View results
print(missing_summary)
#missing_SEQN missing_SDMVPSU missing_SDMVSTRA missing_WTMEC2YR missing_WTSVOC2Y missing_YEAR
#1            0               0                0                0              828            0
#missing_VTQ241A missing_MCQ050 missing_RIDAGEYR missing_RIAGENDR missing_RIDRETH3
#1             907              0                0                0                0
#missing_INDFMPIR missing_HOQ065 missing_MCQ040 missing_SMQ040 missing_SMQ876 missing_BMXBMI
#1              157             51              0            843           1116             84

print(non_binary_summary)
#  VTQ241A_non_binary MCQ050_non_binary
#                  1                 1

#Replace non-binary with NAs
subset_adults_for_impute <- subset_adults_for_impute %>%
  mutate(
    VTQ241A = ifelse(VTQ241A %in% c(1, 2), VTQ241A, NA),
    MCQ050  = ifelse(MCQ050  %in% c(1, 2), MCQ050, NA)
  )


### -------------------------------------------
# Step 3: Run MICE Multiple Imputation
### -------------------------------------------
# Set m = 1 for single imputation (like missForest)
set.seed(123)
imp_mice <- mice(subset_adults_for_impute[, vars_to_impute_adults],
                 m = 1, method = "pmm", seed = 123)

# Extract completed (imputed) dataset
imputed_single <- complete(imp_mice, 1)

# Combine with ID variables
#Also bring back variables I did not impute
nhanes_all_imputed <- bind_cols(
  subset_adults_for_impute[, c(id_vars, vars_to_keep_but_not_impute)],
  imputed_single
)


# Save final single-imputation dataset
saveRDS(nhanes_all_imputed, "imputed_adults_asthma_single.rds")

#Check to make sure that imputation worked:
# Check summary of imputed variables
summary(nhanes_all_imputed$INDFMPIR)
summary(nhanes_all_imputed$VTQ241A)
summary(nhanes_all_imputed$HOQ065)

# Check for any remaining NAs
colSums(is.na(nhanes_all_imputed[, vars_to_impute_adults]))
# VTQ241A   MCQ050 RIDAGEYR RIAGENDR RIDRETH3 INDFMPIR   HOQ065 
#0        0        0        0        0        0        0
