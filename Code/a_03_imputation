#a_03_imputation

### ------------------------------------------------------------------------
# a_03_imputation.R (for adults 18+ w/ asthma)
### ------------------------------------------------------------------------

# Load packages
library(dplyr)
library(tidyr)
install.packages("missForest")
library(missForest)
library(tibble)

### -------------------------------------------
# Step 1: Define Variables for Imputation
### -------------------------------------------
vars_to_impute_adults <- c(
  "RIDAGEYR",  # Age
  "RIAGENDR",  # Sex
  "RIDRETH3",  # Race/ethnicity
  "INDFMPIR",  # Income
  "HOQ065"     # Housing
)

id_vars <- c("SEQN", "SDMVPSU", "SDMVSTRA", "WTMEC2YR", "WTSVOC2Y", "YEAR")
vars_to_keep_but_not_impute <- c("MCQ040", "MCQ050", "VTQ241A")

### -------------------------------------------
# Step 2: Filter to Adults (18+) WITH Asthma Diagnosis
### -------------------------------------------
subset_adults_for_impute <- merged_nhanes_all %>%
  filter(RIDAGEYR >= 18, MCQ035 == 1) %>%
  select(all_of(c(id_vars, vars_to_impute_adults, vars_to_keep_but_not_impute)))


#Check-point:
#Diagnose Missingness and Non-Binary Values
# Count missing values per variable
missing_summary <- subset_adults_for_impute %>%
  summarise(across(everything(), ~sum(is.na(.)), .names = "missing_{.col}"))

# For binary yes/no variables, check for values other than 1 or 2
# Assuming VTQ241A and MCQ050 are yes/no variables (check others if needed)
non_binary_summary <- subset_adults_for_impute %>%
  summarise(
    VTQ241A_non_binary = sum(!(VTQ241A %in% c(1, 2)) & !is.na(VTQ241A)),
    MCQ050_non_binary = sum(!(MCQ050 %in% c(1, 2)) & !is.na(MCQ050))
  )

# View results
print(missing_summary)
#missing_SEQN missing_SDMVPSU missing_SDMVSTRA missing_WTMEC2YR missing_WTSVOC2Y
#            0               0                0                0              828
#missing_YEAR missing_RIDAGEYR missing_RIAGENDR missing_RIDRETH3 missing_INDFMPIR
#            0                0                0                0              157
#missing_HOQ065 missing_MCQ040 missing_MCQ050 missing_VTQ241A
#             51              0              0             907

print(non_binary_summary)
#  VTQ241A_non_binary MCQ050_non_binary
#                  1                 1

#Replace non-binary with NAs
subset_adults_for_impute <- subset_adults_for_impute %>%
  mutate(
    VTQ241A = ifelse(VTQ241A %in% c(1, 2), VTQ241A, NA),
    MCQ050  = ifelse(MCQ050  %in% c(1, 2), MCQ050, NA)
  )

### -------------------------------------------
# Step 3: Run the missForest imputation
### -------------------------------------------
# missForest imputation
rownames(subset_adults_for_impute) <- subset_adults_for_impute$SEQN
data_to_impute <- subset_adults_for_impute[, vars_to_impute_adults]
imputation_model_rf <- missForest(data_to_impute,verbose = T) # verbose will print out the errors and show you where the imputation stops
#Got the error message:
#Warning messages:
#1: In randomForest.default(x = obsX, y = obsY, ntree = ntree, mtry = mtry,  :
#The response has five or fewer unique values.  Are you sure you want to do regression?
#2: In randomForest.default(x = obsX, y = obsY, ntree = ntree, mtry = mtry,  :
#The response has five or fewer unique values.  Are you sure you want to do regression?
#3: In randomForest.default(x = obsX, y = obsY, ntree = ntree, mtry = mtry,  :
#The response has five or fewer unique values.  Are you sure you want to do regression?
#4: In randomForest.default(x = obsX, y = obsY, ntree = ntree, mtry = mtry,  :
#The response has five or fewer unique values.  Are you sure you want to do regression?

imputed_df <- imputation_model_rf$ximp
imputed_df <- rownames_to_column(imputed_df, var = "SEQN")

#Double-checking that imputation worked
summary(imputed_df$INDFMPIR)
#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
#0.000   0.970   1.740   2.176   3.139   5.000 

summary(imputed_df$VTQ241A)
#Length  Class   Mode 
#0   NULL   NULL 

summary(imputed_df$HOQ065)
#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
#1.000   1.000   1.000   1.513   2.000   9.000 

colSums(is.na(imputed_df[, vars_to_impute_adults]))
#RIDAGEYR RIAGENDR RIDRETH3 INDFMPIR   HOQ065 
#0        0        0        0        0 

# bring back the rest of the variables
other_variables <- merged_nhanes_all %>%
  select(-vars_to_impute_adults)

colnames(subset_adults_for_impute)
# [1] "SEQN"     "SDMVPSU"  "SDMVSTRA" "WTMEC2YR" "WTSVOC2Y" "YEAR"     "RIDAGEYR"
#[8] "RIAGENDR" "RIDRETH3" "INDFMPIR" "HOQ065"   "MCQ040"   "MCQ050"   "VTQ241A" 

nhanes_all_imputed <- merge(other_variables, imputed_df, by = "SEQN")

# Save final single-imputation dataset
saveRDS(nhanes_all_imputed, "imputed_adults_asthma_single.rds")
